{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","prevProps","props","name","clearInterval","className","toUTCString","slice","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAE1B,OAXP,gCAcE,SAAmBM,GACAJ,KAAKK,MAAdC,KAEKF,EAAUE,OAjB3B,kCAsBE,WACEL,OAAOM,cAAcP,KAAKD,WAvB9B,oBA0BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAS,EAASN,KAAKK,MAAdC,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGX,EAAMY,cAAcC,OAAO,IAAK,YAvC3C,GAA2BC,IAAMC,WCGjC,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAGX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAW,UACXC,UAAU,GAHd,EAMEpB,QAAU,EANZ,EAqBEqB,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEgB,UAAU,KAxB9B,EA2BEI,UAAY,WACV,EAAKpB,SAAS,CAAEgB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAezB,KAAKoB,WAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,WAExCvB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEe,UAAWL,QAC1B,QAdP,kCAiBE,WACEZ,OAAOM,cAAcP,KAAKD,WAlB9B,oBA+BE,WACE,MAAgCC,KAAKJ,MAA7BsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKX,UAAU,MAAf,UACE,6CAECW,GAAY,cAAC,EAAD,CAAOb,KAAMY,WAtClC,GAAyBP,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.a3d52940.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, {}> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      // console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}